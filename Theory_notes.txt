Тестирование ПО - процесс анализа программного средства и сопутствующей документации с целью выявления дефектов и повышения качества продукта.
Тестирование позволяет удостовериться, что программа соответствует требованиям.
Тестирование позволяет определить условия, при которых программа ведёт себя некорректно.

	Модель разработки ПО
структура, систематизирующая различные виды проектной деятельности, их взаимодействие и последовательность в процессе разработки ПО.
 Водопадлная модель представляет исторический интерес, в современных проектоах практически неприменима. с точки зрения тестирования эта модель
плоха тем, что тестирование в явном виде появляется здесь лишь с середины развития проекта, достигая своего максимума в самом конце.
 V-образная модель является логическим развитием водопадной. Здесь тестирование появляется в самом начале, что позволяет минимизировать риски.
 Итерационная инрементальная модель - фундаментальная основа современного подхода к разработке ПО. С точки зрения жизненного цикла модель 
является итерационной, т.к. подразумевает многократное повторение одних и тех же стадий. С точки зрения развития продукта модель является 
инкрементальной. Особенность этой модели - разбивание проекта на небольшие промежутки(итерации), каждый из которых может включать в себя все
классические стадии, присущие водопадной и v-образной моделям.
 Спиральная модель представляет собой частный случай интерационной инкрементальной модели, в котором особое внимание уделяется управлению рисками,
в особенности влияющими на организацию процесса разработки проекта и контрольные точки. 
 Гибкая модель (agile) представляет собой совокупность различных подходов к разработки и базируется на т.н. "agile-манифесте":
 -Люди и взаимодействие важнее процессов и инструментов.
 -Работающий продукт важнее исчерпывающей документации.
 -Сотрудничество с заказчиком важнее согласования условий контракта.
 -Готовность к изменениям важнее следования первоначальному плану.

 STLC
 1. Общее планирование и анализ требований. Стадия объективно необходима как минимум для того, чтобы понимать что предстоить тестировать, как много
будет работы, какие есть сложности, всё ли необходимое у нас есть и т.п. Как правило, получить ответы на такие вопросы невозможно без анализа
требований, т.к. именно требования являются первичным источником ответов. 
 2. Уточнение критериев приёмки. Позволяет сформулировать или уточнить метрики и признаки возможности или необходимости начала тестирования (entry criteria),
приостановки(suspension criteria) и возобновления (resumption criteria) тестирования, завершения или прекразения тестирования(exit criteria).
 3. Уточнение стратегии планирования. Представляет собой еще одно обращение к планированию, но уже на локальном уровне: рассматриваются и уточняются те
части стратегии тестирования(test strategy), которые актуальны для текущей итерации.
 4. Разработка тест-кейсов. Посвящена разработке, пересмотру, уточнению, доработке и прочим действиям с тест-кейсами, наборами тест-кейсов, тестовыми
сценариями и иными артефактами, которые будут использоваться при непосредственном выполнении тестирования.
 5 и 6. Выполнение тест-кейсов и фиксация найденных дефектов. Тесно связаны между собой и фактически выполняются параллельно: дефекты фиксируются сразу
по факту их обнаружения в процессе выполнения тест-кейсов. Зачастую после выполнения всех тест-кейсов проводится явно выделенная стадия уточнения,
на которой все отчёты о дефектах рассматриваются повторно с целью формирования единого понимания проблемы и уточнения таких характеристик
дефекта, как важность и срочность.
 7 и 8. Анализ результатов тестирования и отчётность. Также тесно связаны между собой и выполняются практически параллельно. Формулируемые на стадии анализа
выводы напрямую зависят от плана тестирования, критериев приёмки и уточненной стратегии.

 ОСНОВНЫЕ ПРИНЦИПЫ ТЕСТИРОВАНИЯ
-Тестирования показывает наличие дефектов, а не их отустствие.
-Исчерпывающее тестирование невозможно.
-Тестирование тем эффективнее, чем раньше оно выполняется. 
-Кластеризация дефектов. группировка дефектов по какому-то явному признакому является хорошим поводом к продолжению исследования данной области продукта.
-Парадокс пестицида. При повторении одних и тех же проверок они со временем перестанут обнаруживать новые дефекты.
-Тестирование зависит от контекста. Нет универсального подхода к тестированию. Характеристики программного продукта влияют на набор техник, глубину и принципы работы.
-Отсутствие дефектов - не самоцель. Продукт должен быть не только избавлен от дефектов насколько это возможно, но и удволетворять требованиям заказчика.

 ТЕСТИРОВАНИЕ ДОКУМЕНТАЦИИ И ТРЕБОВАНИЙ
 Требование - описание того, какие функции и с соблюдением каких условий должно выполнять приложение в процессе решения полезной для пользователя задачи. 
Является отправной точкой для определения того, что проектная команда будет проектировать, реализовывать и тестировать. Требования предоставляют
возможность оценить масштаб изменений и управлять изменениями; являются основой для формирования плана проекта; помогают предотвращать или разрешать конфликты;
упрощают расстановку приоритетов в наборе задач; позволяют объективно оценить степень прогресса в разработке проекта.

 Продуктная документация используется используется проектной командой во время разработки и поддержки продукта:
- План прокета и в том числе тестовый план.
- Требования к программногму продукту и функциональные спецификации.
- Архитектура и дизайн.
- Тест-кейсы и наборы тест-кейсов.
- Технический спецификации, такие как схемы баз данных, описания алгоритмов, интерфейсов и т.д.

 Проектная документация включает в себя как продуктную документацию, так и некоторые дополнительные виды документации и используется не только на стадии разработки,
но и на ранних и поздних стадиях(например, на стадии внедрения и эксплуатации).





























