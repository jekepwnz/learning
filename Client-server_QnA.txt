Client_Server
	1) Прочиать про клиент-серверную архитектуру
	2) Что такое HTTP и HTTPS
HTTP (HyperText Transfer Protocol) представляет собой прикладной протокол. Клиент направляет запрос к серверу расположения ресурса, протокол форматирует данные нужным
образом и предоставляет результат, затем браузер отображает полученные данные.
HTTP - это набор правил передачи информации. Ресурсы с HTTP в основном используются в информационных и
развлекательных сайтах, где безопасность данных не столь существенный вопрос.
HTTPS ( HyperText Transfer Protocol Secure) - защещённый проток передачи данных в интернете. Это тот же протокол HTTP, на защищённый SSL/TLS-сертификатом.
Сертификат - это цифровая подпись сайте, с её помощью подтверждается её подлинность. Перед тем как установить защещённое соединение, браузер запрашивает этот документ и 
обращается к центру сертификации, чтобы подтвердить легальность документа. Если он действителен, то браузер считает этот сайт безопасным и начинает обмен данными.

	3) HTTP методы
HTTP определяет множество медотов запроса, которые указывают, какое желаемое действие выполнится для данного ресурса. названия могут быть существительными,
но методы запроса иногда называются HTTP глаголами. Каждый реализует свою семантику, но каждая группа команд разделяет общией свойства: так, методы
могут быть безопасными, идемпотентными или кешируемыми.
Безопасные методы не меняют данные, их можно выполнять в любой последовательности - GET, HEAD, OPTIONS
Идемпотентные методы - при повторном выполнении результаты ожидаемо одинаковые - GET, HEAD, PUT, DELETE, OPTIONS, TRACE.
Неидемпотентные методы - при повторном выполнении результаты будут отличаться - POST, PATCH.
GET - метод заправшивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
HEAD - запрашивает ресурс так же, как и метод GET, но без тела ответа.
POST - используется для отправки сущностей к определённому ресурсу. часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
PUT - заменяет все текущие представления ресурса данными запроса.
DELETE - удаляет указанный ресурс.
CONNECT - устанавливает "туннель" к серверу, определённому по ресурсу.
OPTIONS - используется для описания параметров соединения с ресурсом.
TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса.
PATCH - используется для частичного изменения ресурса.

	4) HTTP статус коды сервера
Код ответа (состояния) HTTP показывает, был ли успешно выполнен определённый HTTP запрос. Коды сгруппированы в 5 классов:
  1 - Информационные (Information)     100-199
  2 - Успешные (Success)               200-299
  3 - Перенаправления (Redirect)       300-399
  4 - Клиентские ошибки (Client error) 400-499
  5 - Серверные ошибки (Server error)  500-599

5) Что такое ядро браузера 
6) Какие браузеры какиие ядра используют
7) Что такое API
8. Что такое ендпоинты
9) URL (URI, URL, URN)
10) Идемпотентные HTTP методы
11) Безопасные HTTP методы
12) Иденфикация, Аутентификация, Авторизация
13) Что такое IP
14) Что такое октаты в DNS
15) Что такое порт, сколько портов у Linux сервера
16) Уровни OSI
17) Хедеры http запросов