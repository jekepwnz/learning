Client_Server
	1) Прочиать про клиент-серверную архитектуру
	2) Что такое HTTP и HTTPS
HTTP (HyperText Transfer Protocol) представляет собой прикладной протокол. Клиент направляет запрос к серверу расположения ресурса, протокол форматирует данные нужным
образом и предоставляет результат, затем браузер отображает полученные данные.
HTTP - это набор правил передачи информации. Ресурсы с HTTP в основном используются в информационных и
развлекательных сайтах, где безопасность данных не столь существенный вопрос.
HTTPS ( HyperText Transfer Protocol Secure) - защещённый проток передачи данных в интернете. Это тот же протокол HTTP, на защищённый SSL/TLS-сертификатом.
Сертификат - это цифровая подпись сайте, с её помощью подтверждается её подлинность. Перед тем как установить защещённое соединение, браузер запрашивает этот документ и 
обращается к центру сертификации, чтобы подтвердить легальность документа. Если он действителен, то браузер считает этот сайт безопасным и начинает обмен данными.

	3) HTTP методы
HTTP определяет множество медотов запроса, которые указывают, какое желаемое действие выполнится для данного ресурса. названия могут быть существительными,
но методы запроса иногда называются HTTP глаголами. Каждый реализует свою семантику, но каждая группа команд разделяет общией свойства: так, методы
могут быть безопасными, идемпотентными или кешируемыми.
Безопасные методы не меняют данные, их можно выполнять в любой последовательности - GET, HEAD, OPTIONS
Идемпотентные методы - при повторном выполнении результаты ожидаемо одинаковые - GET, HEAD, PUT, DELETE, OPTIONS, TRACE.
Неидемпотентные методы - при повторном выполнении результаты будут отличаться - POST, PATCH.
GET - метод заправшивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
HEAD - запрашивает ресурс так же, как и метод GET, но без тела ответа.
POST - используется для отправки сущностей к определённому ресурсу. часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
PUT - заменяет все текущие представления ресурса данными запроса.
DELETE - удаляет указанный ресурс.
CONNECT - устанавливает "туннель" к серверу, определённому по ресурсу.
OPTIONS - используется для описания параметров соединения с ресурсом.
TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса.
PATCH - используется для частичного изменения ресурса.

	4) HTTP статус коды сервера
Код ответа (состояния) HTTP показывает, был ли успешно выполнен определённый HTTP запрос. Коды сгруппированы в 5 классов:
  1 - Информационные (Information)     100-199
  2 - Успешные (Success)               200-299
  3 - Перенаправления (Redirect)       300-399
  4 - Клиентские ошибки (Client error) 400-499
  5 - Серверные ошибки (Server error)  500-599

        5) Что такое ядро браузера 
Браузер = оболочка + ядро. Оболочка относится к обочке браузера: меня панели инструментов и т.д. В основном предназначена для работы с пользовательсим
интерфейсом, настройки параметров и так далее. Ядро - это прогррамма или модуль, который отображает контент на основе языка разметки.
Движок рендеринга отвечает за получение содержимого(HTML, XMK, изображения), организацию информации(CSS), расчёт отображения веб-страницы, а затем 
вывод её на монитор. Движок JS анализирует язык Javascript и выполняет язык Javascript Для достижения динамических эффектов веб-страницы.

        6) Какие браузеры какиие ядра используют
Trident - IE
EdgeHTML - Microsoft Edge
Blink - Chrome, Edge, Opera, Vivaldi.
Gecko - Firefox
WebKit - Apple Safari.
KHTML - Konqueror

       7) Что такое API
API (Application Programming Interface) - это механизмы, которые позволяют двух программным компонентам взаимодействовать друг с другом, используя набор определений и протоколов.
Архитектура API обычно объясняется с точки зрения клиента и сервера. Приложение, отправляющее запрос - клиент, а приложение, отправляющее ответ, называется сервером.
       8) Что такое ендпоинты
Endpoint (конечная точка) преставляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. Простыми словами, это адрес, 
на который отправляются сообщения. 

       9) URL (URI, URL, URN)
URI Unifor Resource Identifier (унифицированный индентификатор ресурса) - имя и адрес ресурса в сети, включает в себя URL и URN
URL Uniform Resource Locator (унифицированный определитель местонахождения ресурса) - адрес ресурса в сети, определяет местонахождения и способ обращения к нему
URN Uniform Resource Name (унифицированное имя ресурса) - имя ресурса в сети, определяет только название ресурса, но не говорит как к нему подключиться.

10) Идемпотентные HTTP методы
11) Безопасные HTTP методы
       12) Иденфикация, Аутентификация, Авторизация
Идентификация - процедруа, в результате выполнения которая для субъекта идентификации выявляется его идентификатор, однозначно определяющия этого субъекта в системе.
Для начала система запрашивает логин, пользователь указывает его, система распознаёт как существующий - идентификация.
Аутентификация - процедура проверки подлинности, например путём сравнения введенного им пароля с паролем, сохраненным в базе данных. 
Система просит ввести пароль, пользователь его вводит, система соглашается, что пользователь настоящий, раз пароль совпал.
Авторизация - предоставление определенному лицу или группе лиц прав на выполнение определенных действий.
Система предоставит пользователю право читать письма в своем почтовом ящике и все в таком духе - это авторизация.
Аутентификация без предварительной идентификации лишшена смысла, сначала нужно понять подлинность чего надо проверять.
Авторизация без идентификации и тем более аутентификации очень даже возможна. Напрмер в гугл документах можно публиковать документы так, чтобы они были доступны
вообще кому угодно.

       13) Что такое IP
Третий протокол сетевого уровня в семействи TCP/IP - протокол интернет. Доставляет паке ты по сети Internet без гарантии доставки и без установленного соединенияю
IP не устанавливает соединение, так как каждый пакет данных передаётся независимо. Это ненадёждный протокол, так как он не гарантирует доставку пакетов:
хост-отправитель, хост-получатель и промежуточные хосты не отправляют подтверждения.
14) Что такое октаты в DNS
15) Что такое порт, сколько портов у Linux сервера
16) Уровни OSI
17) Хедеры http запросов